[
  {
    "file": "1747842004492-test.tsx",
    "js": "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// uploads/tersa/1747842004492-test.tsx\nvar test_exports = {};\n__export(test_exports, {\n  default: () => test_default\n});\nmodule.exports = __toCommonJS(test_exports);\nvar import_react = __toESM(require(\"react\"));\nvar Test = ({ message = \"Hello from test.tsx\" }) => {\n  return /* @__PURE__ */ import_react.default.createElement(\"div\", { className: \"test-container\" }, /* @__PURE__ */ import_react.default.createElement(\"h1\", null, message));\n};\nvar test_default = Test;\n",
    "originalContent": "import React from \"react\";\r\n\r\ninterface TestProps {\r\n  message?: string;\r\n}\r\n\r\nconst Test: React.FC<TestProps> = ({ message = \"Hello from test.tsx\" }) => {\r\n  return (\r\n    <div className=\"test-container\">\r\n      <h1>{message}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"
  }
]
